#+TITLE: HPI: Fission talk

* HPI

Programmatic API to your personal data.

** TODO quick demo
(somewhat confusingly, the package name is =my=, so everywhere you see =import my=, it means "HPI")

* TODO Demonstrations
** TODO for interactive demo maybe do =import my.= and tab? just explore some random data which is mostly public
maybe mess with pandas...

* TODO Prior art/similar projects
** TODO mention proprietary platforms?
I don't believe they can really work, at least without being partially open sources because of the vastness of data sources.
** Memex by Andrew Louis
Very well built, but not open source :(
** Dogsheep
xx
** Perkeep
Seems to be centered on storage model (objects?).
E.g. I struggled to
# Hope to give it a one more go, HPI can be used as the source of input data.
** TODO ????
* Why?
** shared patterns
Shared design principles for exporting data
This way it differs from a bunch of separate
Extracting in =my.core=

* What does it solve?
** local/offline interfaces
Even if you do have internet, search on most sites sucks hard.
Even remembering where exactly you need to search is a cognitive overhead.
- TODO show F2 keybinding?
- orger
*** TODO link to search article?

** quantified self
We have lots of data, yet no insight from it.
# perhaps except the 'insight' big tech gets for ads purposes
Imagine if you could have a system which automatically finds interesting correlations and TODO

** siphons

** dead services
- =my.endomondo=
** migrating/lock-in protection
- =my.rtm=
  I'm not using Remember The Milk anymore, but have a data mirror, so I can search in old tasks.

** memex

* Modules
just a quick overview, not sure if there is much to talk about here
** TODO execute the same thing as in
# fund fact -- this list is programmatically generated by HPI

* Features
- local-first (actually fully offline!)
** TODO enriching data (e.g. timezone provider)

* Why 'programmatic'?
Very important!

** Databases suck
- choosing schema is hard
- not everything fits into the relational model
- migrations are hard

* One-way

TODO
It's not strictly necessary, but this seems like a much much harder problem.

* TODO some diagram
link to myinfra


* Design
** TODO synthetic exports?

* TODO merging data?
- github: merges GDPR export (manual, but complete) + API data (automatic, but incomplete)
-

* Architecture?
- TODO namespace packages
- TODO mention elisp ?

** TODO config?
** extending
** TODO cachew?
currently sqlite, but maybe in postgres/redis?
thanks to SqlAlchemy might be almost trivial

* Data flow?

* Why Python?

- mypy

** FFI?
That said

** HPI -> HTTP
TODO observable notebook?

** HPI -> Sqlite
TODO datasette demo?

** HPI -> JSON
TODO demo query/jq thing?

* Error handling

Very important!
mypy :heart:
TODO example of 'opt-in' error handling?

* Storage
- how much space it takes?
- syncing
- bleanser?


* Integrations
** TODO grafana?

* What's hard/unsolved?
- data is crap
  # It takes a while to reverse engineer it. E.g. even timezones etc
- data on phones is locked in
  Even more annoying that they often keep data in sqlite databases on the device already.
- how to scale/extend?
  # I can't properly maintain
  Sort of an Emacs problem
- versioning?
  kind of the same problem
  # completely unclear -- changes all the time
  # at least with code it's possible to keep it backwards compatible & test
- where to get test data?
  # would be nice if services provided test data/test API endpoints


* TODO reveal stuff
** [2021-04-19 Mon 22:39] time estimates?
